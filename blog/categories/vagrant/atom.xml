<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vagrant | Mutiny Theory]]></title>
  <link href="http://mutiny.work/blog/categories/vagrant/atom.xml" rel="self"/>
  <link href="http://mutiny.work/"/>
  <updated>2016-07-20T22:58:00+08:00</updated>
  <id>http://mutiny.work/</id>
  <author>
    <name><![CDATA[Johnny Hsu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Vagrant's Networking]]></title>
    <link href="http://mutiny.work/blog/2016/07/14/the-vagrants-networking/"/>
    <updated>2016-07-14T09:37:44+08:00</updated>
    <id>http://mutiny.work/blog/2016/07/14/the-vagrants-networking</id>
    <content type="html"><![CDATA[<p>You can Setup Private network or Public network on vagrant.</p>

<h3>Private networking</h3>

<pre><code class="ruby Vagrantfile">Vagrant.configure("2") do |config|
  config.vm.network "private_network", type:"dhcp"
end
</code></pre>

<h3>Public networking</h3>

<pre><code class="ruby Vagrantfile">#STATIC IP
config.vm.network "public_network",ip: "192.168.1.1"

#Default Interface
config.vm.network "public_network",bridge: 'eb1: Wi-Fi(AirPort)'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Apache2 &amp; MySQL With Puppet in Vagrant]]></title>
    <link href="http://mutiny.work/blog/2016/07/13/installing-apache2-and-mysql-with-puppet-in-vagrant/"/>
    <updated>2016-07-13T16:52:01+08:00</updated>
    <id>http://mutiny.work/blog/2016/07/13/installing-apache2-and-mysql-with-puppet-in-vagrant</id>
    <content type="html"><![CDATA[<pre><code class="ruby Vagrantfile">Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "precise32"
  config.vm.box_url = "http://files.vagrantup.com/precise32.box"

  # Setup for Web Server
  config.vm.define "web" do |web|
    web.vm.hostname = "web"
    web.vm.box = "apache"
    web.vm.network "private_network", type: "dhcp"
    web.vm.network "forwarded_port", guest: 80, host: 8080
    web.vm.provision "puppet" do |puppet|
      puppet.manifests_path = "manifests"
      puppet.manifest_file = "default.pp"
    end
  end

  # Setup for MySQL DB Server
  config.vm.define "db" do |db|
    db.vm.hostname = "db"
    db.vm.box = "mysql"
    db.vm.network "private_network", type: "dhcp"
  end


end
</code></pre>

<pre><code class="ruby manifests/default.pp">exec { "apt-get update":
        command =&gt; "/usr/bin/apt-get update",
}

package { "apache2":
        require =&gt; Exec["apt-get update"],
}

file { "/var/www":
         ensure =&gt; link,
         target =&gt; "/vagrant",
         force =&gt; true,
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Apache With Chef]]></title>
    <link href="http://mutiny.work/blog/2016/07/13/installing-apache-with-chef/"/>
    <updated>2016-07-13T11:48:11+08:00</updated>
    <id>http://mutiny.work/blog/2016/07/13/installing-apache-with-chef</id>
    <content type="html"><![CDATA[<pre><code class="ruby Vagrantfile">  config.vm.provision "chef_solo" do |chef|
    chef.add_recipe "vagrant_la"
  end
</code></pre>

<h4>Tree of Cookbooks</h4>

<pre><code class="">cookbooks:/
---/vagrant_la
   ---/recipes
      ---/default.rb
</code></pre>

<pre><code class="ruby default.rb">execute "apt-get update"
package "apache2"
execute "rm -rf /var/www"
link "/var/www" do
       to "/vagrant"
end
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rush Vagrant on Ubuntu14.04 LTS]]></title>
    <link href="http://mutiny.work/blog/2016/07/12/rush-vagrant-on-ubuntu14-dot-04-lts/"/>
    <updated>2016-07-12T14:33:38+08:00</updated>
    <id>http://mutiny.work/blog/2016/07/12/rush-vagrant-on-ubuntu14-dot-04-lts</id>
    <content type="html"><![CDATA[<h3>Installing Virtualbox &amp; Vagrant</h3>

<pre><code class="bash">$ wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc
$ sudo apt-key add oracle_vbox.asc
$ sudo apt-get install virtualbox
$ sudo apt-get install vagrant
</code></pre>

<p>Install the dkms package to ensure that the VirtualBox host kernel modules</p>

<pre><code class="bash">$ sudo apt-get install virtualbox-dkms
</code></pre>

<h3>Get First Vagrant Machine</h3>

<pre><code class="bash">$ vagrant box add precise32 http://files.vagrantup.com/precise32.box
$ vagrant box add precise64 http://files.vagrantup.com/precise64.box
</code></pre>

<h3>Configure Project</h3>

<pre><code class="bash">$ mkdir vagrant_project
$ cd vagrant_project
$ vagrant init
</code></pre>

<p>And Edit the <code>Vagrantfile</code> file</p>

<pre><code class="bash">config.vm.box = "precise64"
#Synced Folder
config.vm.synced_folder "src/", "/vagrant_data"
#Forward Port
config.vm.network "forwarded_port", guest: 80, host: 8080
#Provision
config.vm.provision "shell", path: "provision.sh"
</code></pre>

<h3>Start Environment</h3>

<pre><code class="bash">~/vagrant_project_64$ vagrant up
</code></pre>

<p>Shell Script</p>

<pre><code class="bash provision.sh">#!/usr/bin/env bash

echo "Installing Apache and setting apache up... please wait"
apt-get update &gt; /dev/null 2&gt;&amp;1
apt-get install -y apache2 &gt; /dev/null 2&gt;&amp;1

rm -rf /var/www
ln -fs /vagrant /var/www
</code></pre>
]]></content>
  </entry>
  
</feed>
