<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: T-sql | Mutiny Theory]]></title>
  <link href="http://mutiny.work/blog/categories/t-sql/atom.xml" rel="self"/>
  <link href="http://mutiny.work/"/>
  <updated>2017-02-17T03:10:46+00:00</updated>
  <id>http://mutiny.work/</id>
  <author>
    <name><![CDATA[Johnny Hsu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Exercises T-SQL #Character 2]]></title>
    <link href="http://mutiny.work/blog/2017/02/06/exercises-t-sql-number-character-2/"/>
    <updated>2017-02-06T08:00:41+00:00</updated>
    <id>http://mutiny.work/blog/2017/02/06/exercises-t-sql-number-character-2</id>
    <content type="html"><![CDATA[<p>Exercises sample Query</p>

<!-- more -->


<pre><code class="sql">-- 练习1
-- 返回2007年6月份的订单
SELECT orderid,orderdate,custid,empid 
FROM Sales.Orders where YEAR(orderdate) = 2007 and MONTH(orderdate)=6;

-- 练习2
-- 返回每个月最后一天的订单
SELECT orderid,orderdate,custid,empid FROM Sales.Orders where orderdate = EOMONTH(orderdate);

-- 练习3
-- 返回姓氏包含字母a两次以上的雇员
SELECT * FROM HR.Employees where (LEN(lastname) - LEN(REPLACE(lastname,'a',''))) &gt; 1;

-- 练习4 
-- 返回总价大于10 000 的订单 按照总价排序
exec sys.sp_help @objname = N'Sales.OrderDetails';

select orderid, sum(qty * unitprice) as totalvalue  from Sales.OrderDetails 
group by orderid  having sum(qty * unitprice)&gt; 10000 order by sum(qty * unitprice) desc;

-- 练习5
-- 返回2007年中平均运费最高的3个国家
select top(3) shipcountry, avg(freight) AS avgfreight   
from Sales.Orders 
where   YEAR(orderdate) = 2007 group by shipcountry order by avg(freight) desc;

-- 练习6
-- 分别对每个客户的订单按订单日期排序
-- 要用到窗口函数 
select custid,orderdate,orderid,
ROW_NUMBER() OVER(partition by custid order by orderdate, custid ) as rownum 
from Sales.Orders;

-- debug // ROW_NUMBER() OVER(order by custid) // 按照custid排序 rownum为连续计数 1-830
select custid,orderdate,orderid,ROW_NUMBER() OVER(order by custid) as rownum  from Sales.Orders;
-- debug // partition 按照custid分别计算行号 每一个custid对应的order 则需要单独order by排序
select custid,orderdate,orderid,ROW_NUMBER() OVER(partition by custid order by orderid) as rownum  from Sales.Orders;

-- 练习7
-- 推测性别 Ms. Mrs.-Female / Mr - Male
SELECT empid,firstname,lastname,titleofcourtesy,
case 
when titleofcourtesy = 'Mr.' then 'Male'
when titleofcourtesy = 'Ms.' then 'Female'
when titleofcourtesy = 'Mrs.' then 'Female'
else 'Unknown'
END AS gender from hr.Employees;

-- 练习8
-- 查询customers 返回id和地区 按地区排序输出行 具有null标记的行最后进行排序
-- region 要作为第二个排序列 第一个0和1 只是用来降序null
select custid,region from Sales.Customers order by case when region is null then 1 else 0 end ,region;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[T-SQL Learning Notes]]></title>
    <link href="http://mutiny.work/blog/2017/01/04/t-sql-learning-notes/"/>
    <updated>2017-01-04T09:03:26+00:00</updated>
    <id>http://mutiny.work/blog/2017/01/04/t-sql-learning-notes</id>
    <content type="html"><![CDATA[<p>讲真，这也算是一种温习.</p>

<!-- more -->


<pre><code class="sql">SELECT orderid,orderdate,custid,empid  
From Sales.Orders where YEAR(orderdate) = 2007 and MONTH(orderdate) = 6;
-- 练习1 返回2007年6月的订单

SELECT orderid,orderdate,custid,empid From Sales.Orders where orderdate = eomonth(orderdate);
-- 练习2 返回每个月的最后一天的订单

SELECT custid, country,region,city FROM Sales.Customers WHERE region = N'WA'; 
-- 这种写法我也实在不理解!! 不会return null的列 也不会return任何WA的列 仅此而已 直接写 ='WA'结果一样

SELECT custid, country,region,city FROM Sales.Customers WHERE region &lt;&gt; N'WA'; -- 非null和非WA的

-- 字符排序
select * from hr.Employees where lastname = N'davis'; -- 不区分大小写
select * from hr.Employees where lastname collate Latin1_General_CS_AS =  N'davis'; -- return null

-- 字符串连接
select empid, firstname + N' ' + lastname As fullname from hr.Employees;
select custid,country,region,city, country+N','+region+N','+city As location from Sales.Customers;
/*
-- 标准SQL规定 连接NULL的结果应为NULL 所以只要任何一个row为null的话 location就会为null
所以需要一个自动将null变为空字符串的函数来做这个拼接动作
*/
select custid,country,region,city, CONCAT(country,N',',  region,N',',  city) from Sales.Customers;
-- 提取一个字符串
select SUBSTRING('abcde',1,3); -- 从第一个开始取3个  abc...
-- 左边3个 右边3个
SELECT LEFT('abcde',3);
-- len datalength 都会返回字符数量 后者不忽略空格
SELECT DATALENGTH(N'ABCDE '); -- 12
SELECT DATALENGTH(N'abcde '); -- 12 字节数
SELECT LEN(N'abcde '); -- 5 字符数 and 忽略空格
SELECT LEN(N'abcde f'); -- 7 不会忽略中间的空格!!!!!!

-- 返回某个字符串在目标字符中第一次出现的位置
SELECT CHARINDEX('y','woody'); -- 5
-- 返回某种模式第一次出现的位置 所谓模式就似乎 0-9 a-z 或者其他正则
select PATINDEX('%[0-9]%','abcde800efghijklmn');-- 6
-- replace
SELECT REPLACE('2016-12-12','-','/'); -- 2016/12/12
-- 计算lastname中e出现的次数 // thinking 将e变成空 len出来的字数会自动缩水 再由原来的长度来减
SELECT lastname, LEN(lastname) - LEN(REPLACE(lastname,'e','')) AS numoccur from HR.Employees;
</code></pre>

<blockquote><p>未完 持续更新中</p></blockquote>
]]></content>
  </entry>
  
</feed>
