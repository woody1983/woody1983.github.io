<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | Johnny's Blog]]></title>
  <link href="http://woody1983.github.io/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://woody1983.github.io/"/>
  <updated>2016-07-12T06:40:49+00:00</updated>
  <id>http://woody1983.github.io/</id>
  <author>
    <name><![CDATA[Johnny Hsu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rush Vagrant on Ubuntu14.04 LTS]]></title>
    <link href="http://woody1983.github.io/blog/2016/07/12/rush-vagrant-on-ubuntu14-dot-04-lts/"/>
    <updated>2016-07-12T06:33:38+00:00</updated>
    <id>http://woody1983.github.io/blog/2016/07/12/rush-vagrant-on-ubuntu14-dot-04-lts</id>
    <content type="html"><![CDATA[<h3>First Step:</h3>

<p>To build a user focus on Vagrant.</p>

<pre><code class="bash">root$ adduser _username_
visudo
</code></pre>

<h3>Install VirtualBox</h3>

<pre><code class="bash">$sudo apt-get install dkms
$wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc
$sudo apt-key add oracle_vbox.asc
$sudo apt-get update 
$sudo apt-get install virtualbox-4.3 -y
$sudo apt-get update
$sudo adduser _username_ vboxusers
</code></pre>

<h3>Install Vagrant</h3>

<pre><code class="bash">$wget https://releases.hashicorp.com/vagrant/1.8.4/vagrant_1.8.4_x86_64.debsudo dpkg -i vagrant_1.8.4
$sudo dpkg -i vagrant_1.8.4_x86_64.deb
$vagrant init precise64 http://files.vagrantup.com/precise64.box
$vagrant up

Bringing machine 'default' up with 'virtualbox' provider...
==&gt; default: Box 'precise64' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: &gt;= 0
==&gt; default: Box file was not detected as metadata. Adding it directly...
==&gt; default: Adding box 'precise64' (v0) for provider: virtualbox
    default: Downloading: http://files.vagrantup.com/precise64.box
==&gt; default: Successfully added box 'precise64' (v0) for 'virtualbox'!
==&gt; default: Importing base box 'precise64'...
==&gt; default: Matching MAC address for NAT networking...
==&gt; default: Setting the name of the VM: woody_default_1468305179364_79438
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==&gt; default: Forwarding ports...
    default: 22 (guest) =&gt; 2222 (host) (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
The guest machine entered an invalid state while waiting for it
to boot. Valid states are 'starting, running'. The machine is in the
'poweroff' state. Please verify everything is configured
properly and try again.

If the provider you're using has a GUI that comes with it,
it is often helpful to open that and watch the machine, since the
GUI often has more helpful error messages than Vagrant can retrieve.
For example, if you're using VirtualBox, run `vagrant up` while the
VirtualBox GUI is open.

The primary issue for this error is that the provider you're using
is not properly configured. This is very rarely a Vagrant issue.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debian/Ubuntu Apt Manual]]></title>
    <link href="http://woody1983.github.io/blog/2016/07/05/debian-slash-ubuntu-apt-manual/"/>
    <updated>2016-07-05T23:56:44+00:00</updated>
    <id>http://woody1983.github.io/blog/2016/07/05/debian-slash-ubuntu-apt-manual</id>
    <content type="html"><![CDATA[<h3>Update or Upgrade</h3>

<pre><code class="bash">apt-get update       #Update source
apt-get upgrade      #Update all installed packages
apt-get dist-upgrade #Update Distributions
</code></pre>

<h3>Install</h3>

<pre><code class="bash">apt-get install &lt;pkg&gt; #Install 
apt-get install --reinstall &lt;pkg&gt; #Install again
apt-get install -f &lt;pkg&gt; #Repair and install (dependency)
</code></pre>

<h3>Remove</h3>

<pre><code class="bash">apt-get remove &lt;pkg&gt; # just remove 
apt-get purge &lt;pkg&gt;  #Remove include config files
</code></pre>

<h3>Download</h3>

<pre><code class="bash">apt-get source &lt;pkg&gt;   #Download source code
apt-get download &lt;pkg&gt; #Download binary tar
apt-get source -d &lt;pkg&gt; #Download and Compile
apt-get build-dep &lt;pkg&gt; #Build pkg source code dependency environment (Compile Env?)
apt-get clean        #Cleanup Cache (/var/cache/apt/archives/{,partial}.)downloaded source code
apt-get autoclean #cleanup out of time source code within cache
apt-get autoremove  #Remove auto install dependency pkg
</code></pre>

<h3>Search</h3>

<pre><code class="bash">apt-cache status #Display system pkg total statistics information
apt-cache search &lt;pkg&gt;   #Search pkg by key words
apt-cache show &lt;pkg_name&gt; #display pkg more information
apt-cache depends &lt;pkg&gt; #Lookup pkg dependency software.
apt-cache rdepends &lt;pkg&gt; #View PKG is dependent on those packages
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Rails Env on Ubuntu/Docker]]></title>
    <link href="http://woody1983.github.io/blog/2016/07/04/build-rails-env-on-ubuntu-slash-docker/"/>
    <updated>2016-07-04T04:25:56+00:00</updated>
    <id>http://woody1983.github.io/blog/2016/07/04/build-rails-env-on-ubuntu-slash-docker</id>
    <content type="html"><![CDATA[<h4>For PPA</h4>

<pre><code class="bash">$ sudo apt-get install python-software-properties
$ sudo apt-get install software-properties-common
</code></pre>

<h4>Ruby 2.2</h4>

<pre><code class="bash">$ sudo apt-add-repository ppa:brightbox/ruby-ng
$ sudo apt-get update
$ sudo apt-get install ruby2.2
</code></pre>

<h5>RedCloth</h5>

<pre><code class="bash">apt-get install make g++
gem install RedCloth -v '4.2.9'
</code></pre>

<h3>Octopress</h3>

<p>Take a look on Offical site<a href="http://octopress.org/docs/blogging/">Octopress</a></p>
]]></content>
  </entry>
  
</feed>
